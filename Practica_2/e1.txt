-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

HERRAMIENTAS CRIPTOGRÁFICAS: USO DE COMANDOS

Esta práctica consiste en aprender a utilizar diferentes comandos como
GPG, OpenSSL etc.

ENTREGA: el usuario debe responder a las preguntas en este mismo fichero,
en el hueco indicado. SE DEBE RESPONDER DE FORMA RAZONADA
A TODOS LOS PUNTOS EN LOS QUE APARECE EL HUECO DE RESPUESTA (indicando
comandos, procedimiento que se ha seguido, etc.).

Las respuestas deben estar escritas en texto plano UTF-8 **CORRECTAMENTE
FORMATEADO** , respondiendo a las preguntas, resumiendo los pasos que
ha tenido que seguir para realizar cada apartado de la práctica y
especificando los comandos que ha ejecutado. SE DEBEN ESPECIFICAR TODOS
LOS COMANDOS PARA REALIZAR CADA PARTE DE CADA APARTADO DEL ENUNCIADO,
COPIANDO EL TEXTO DEL TERMINAL (TANTO COMANDO COMO SALIDA, SIEMPRE QUE
NO SEA MUY LARGA LA SALIDA).

Entregue la memoria como indica el último apartado del enunciado.

- -----------------------------------------------------

1. Cree su par de claves GPG, eligiendo como algoritmo RSA de 4096
bits (tanto firma como cifrado) y que caduque en 5 años.
Elija una passphrase segura. Deberá entregar el fichero con la clave
GPG exportada en el último apartado.

2. Descargue la clave pública del profesor y guárdela en
su anillo de claves. Puede descargar la clave del profesor Enrique
Soriano de:

	http://gsyc.urjc.es/~esoriano

También se puede conseguir de los servidor de claves GPG, como
https://keyserver.ubuntu.com (puedes buscar otros servidores en google).

Compruebe que en ambos sitios (la página personal y un servidor de claves
GPG) la clave pública de Enrique Soriano es la misma.

RESPUESTA:
====================================================
Tras descargar la clave publica que encontramos en el enlace de arriba, e importarla 
a través de gpg podemos ver que tenemos la clave publica nuestra y la clave publica de 
Enrique Soriano. Para comprobar que es realmente la de Enrique Soriano comparamos el 
fingerprint de la que hemos obtenido con el fingerprint que nos enseña el profesor en 
clase. 
Para confirmarlo otra vez, comparamos también la fingerprint con la que aparece
en los servidores de claves de ubuntu y confirmamos que son idénticas.

====================================================

3. Después de descargarlas ¿puede estar seguro de que esas claves descargadas
son auténticas y pertenecen a Enrique Soriano? ¿Por qué?

RESPUESTA:
====================================================
Si que podemos confirmarlo ya que las hemos comparado con el fingerprint del profesor
en el aula. En el caso de no haberlo hecho, no estaríamos seguros ya que podría ser una 
persona que se hace pasar por Enrique Soriano.

====================================================

4. ¿Cómo puede comprobar que la clave descargada pertenece realmente a
Enrique Soriano?


RESPUESTA:
====================================================
A través de comprobar su fingerprint físicamente o por un canal seguro.

====================================================


5. Si es así, firme la clave del profesor y suba la firma al servidor GPG
de Ubuntu: https://keyserver.ubuntu.com. Asigne también un nivel de confianza
completo (full) a Enrique Soriano.

6. Compruebe la autenticidad y la integridad de las tres versiones
del enunciado que están disponibles (1, 2, 3). ¿Puede asegurar que
alguna de las versiones fue publicada por el profesor? ¿Cuál o cuáles?
¿Por qué?

RESPUESTA:
====================================================
Al verificar los tres ficheros obtenemos los siguientes datos de salida:

$ gpg --verify e1.txt 
gpg: Firmado el mar 18 oct 2022 19:19:11 CEST
gpg:                usando RSA clave C7DC3D54399FC39D290A61C9A8D6D9F50054BBA6
gpg: Firma INCORRECTA de "Enrique Soriano-Salvador <enrique.soriano@urjc.es>" [total]
$ gpg --verify e2.txt 
gpg: Firmado el mar 18 oct 2022 19:19:11 CEST
gpg:                usando RSA clave C7DC3D54399FC39D290A61C9A8D6D9F50054BBA6
gpg: Firma correcta de "Enrique Soriano-Salvador <enrique.soriano@urjc.es>" [total]
gpg:                 alias "Enrique Soriano-Salvador <esoriano@gsyc.urjc.es>" [total]
gpg:                 alias "Enrique Soriano-Salvador <enrique.soriano@gmail.com>" [total]
$ gpg --verify e3.txt 
gpg: Firmado el mar 18 oct 2022 19:19:11 CEST
gpg:                usando RSA clave C7DC3D54399FC39D290A61C9A8D6D9F50054BBA6
gpg: Firma INCORRECTA de "Enrique Soriano-Salvador <enrique.soriano@urjc.es>" [total]

Por estos datos podemos decir que el único fichero que podemos asegurar que está
escrito por el profesor es el segundo de ellos ya que es el único que está 
firmado correctamente

====================================================

7. Descargue el fichero secret.gpg, cifrado con una clave simétrica
y descífrelo. El secreto para descifrar el fichero es TOPSECRET.
¿Con qué algoritmo estaba cifrado? ¿Qué contiene el mensaje en claro?

RESPUESTA:
====================================================
Tras descifrarlo podemos ver que estaba cifrado en AES con una clave de 256 bits.
El mensaje en claro nos devuelve un chorro de datos sin sentido con símbolos que no 
se pueden representar. Pero al hacer file del fichero vemos que es una imagen en JPEG.
Podemos ver la imagen de JPEG con el visor de archivos en la que aparece un tigre.

====================================================

8. Descargue a firma separada del mensaje en claro (secret.sig).
Verifique la firma.

¿Puede estar seguro de que el mensaje es integro (no ha sido
modificado por un atacante)? ¿Puede el profesor repudiar dicho
mensaje?

RESPUESTA:
====================================================






====================================================

9. ¿Oculta dicha imagen algún mensaje con técnicas de esteganografía
mediante la herramienta steghide? Pruebe con la misma contraseña
usada para descifrar el fichero.

RESPUESTA:
====================================================
Para comprobar si el mensaje que hemos recibido oculta otro en su 
interior, usaremos el comando steghide. Este comando nos dirá si hay
algún mensaje dentro de la foto del tigre. Lo comprobaremos con la
contraseña que hemos usado anteriormente

$ steghide extract -sf output.jpeg
Anotar salvoconducto:
BASE64 NO ES CIFRADO

El mensaje oculto es BASE64 NO ES CIFRADO

====================================================

10. Cifre esa misma imagen con el algoritmo de clave simétrica AES, con
una clave de 256 bits, usando el comando gpg.

Haga lo mismo usando el comando openssl. En ambos casos tiene que usar
el modo CBC.

COMANDOS:
====================================================
Para el cifrado con gpg hemos usado el siguiente comando:
$ gpg --output gpg_cypher.gpg --symmetric --cipher-algo AES-256 output.jpeg

Y para el cifrado con openssl el siguiente:
$ openssl aes-256-cbc -in output.jpeg -out openssl_cypher.ssl

====================================================

11. Calcule el resumen hash SHA-1 para los dos cifrados anteriores.
¿Coinciden? ¿Deberían coincidir? ¿Por qué?

COMANDO Y RESPUESTA:
====================================================
Para ambos casos hemos usado openssl para hallar la hash de los ficheros:
$ openssl dgst -sha1 gpg_cypher.gpg 
SHA1(gpg_cypher.gpg)= f13ff75d2004231d3fba102c67779e8d6b40712a

$ openssl dgst -sha1 openssl_cypher.ssl 
SHA1(openssl_cypher.ssl)= d9027c50f17a01046ccf974eaee2518a60e272ca

Podemos ver que las tablas son distintas ya que a pesar de usar el mismo
algoritmo de cifrado, cada vez se usará un vector de inicialización  

====================================================

12. Descifre ambos ficheros y compruebe que los datos descifrados son
exactamente los mismos que los originales, generando una hash o usando
un comando Unix para comparar dos ficheros:

COMANDOS:
====================================================






====================================================

13. Genere un certificado X.509 en texto plano para la compañía ACME,
con correo electrónico pepe@acme.jp. La clave RSA tiene que ser de
4096 bits y el certificado debe ser válido por un año desde su
creación. Indique su número de serie:

COMANDOS:
====================================================






====================================================

14. ¿Cuál es el número de serie y el fingerprint del certificado
X509 que usa www.urjc.es? ¿Para qué dominios es válido? Decodifica
el certificado con el comando openssl.

RESPUESTA:
====================================================






====================================================


15. Verifique la cadena de confianza del certificado del punto anterior
con el comando openssl. En un sistema GNU/Linux, los certificados raíz
del sistema se encuentran en el directorio /etc/ssl/certs.

RESPUESTA:
====================================================






====================================================


16. Entregue este enunciado con las respuestas, correctamente firmado
y cifrado para que sólo Enrique Soriano pueda leerlo. Tiene que copiar
los datos cifrados/firmados en formato PEM (base64) en la actividad del
Aula Virtual.

También debe entregar un fichero con su clave pública, llamado clave.gpg
(como archivo enviado adjunto). Este fichero debe ser importable
directamente con el comando gpg --import.
-----BEGIN PGP SIGNATURE-----

iQIzBAEBCgAdFiEEx9w9VDmfw50pCmHJqNbZ9QBUu6YFAmNO4A8ACgkQqNbZ9QBU
u6ZRiA//fhb+Re0CDI3YMU8XLYPX5r66Tjq3uV+kE/Qzus5NOYmG2tbAoMWzcItn
JaeE2/z84Oc1feWGKzkTFy0ZIAnZr+U9FCFSCXOHEkOmRtbzxxYKQ0NTDfiLue45
Xpc/Kc+tUjAGM8eJXDOUWDEGnx8cyiT6RbX+T5FUthXMEMeAJw/jDfnirNkNwqDO
J2W1udsdnZEkMbeso6ugFd3e9BE3EViujFQ6s8W241TxjCod1nBUv7dSxHg1VQRh
0/jNkt1X5RVZhAJsTtaxoVuKIVvRG4JmVPnt4Ykfl49HhapYt2TjjGO9QhnCq4bU
2Qnt7czVyyVN9rs4fUivUt7X9Vk0X0FXNacKKoCbsXnBXDosLXBQv6IufFBKjAIr
QqIsJpJmuK1vuas36sx1jBhZ3eJF/oT0dtu+E6FVCRodnUiuJWD+DH+0AfSZSN2C
zFaHj1Mb+zjhQlfDipnlikIMUC0wo7IDCiK7npzx37N1bFiXSW3ZNTPj4KVcml0V
IrayQSUEeffBQRJVHulJx/wOOCSpre7pxedIYTVHEk3SwoRAntEaARTpaWKRln4q
7CcySISMJkrlUs7sHK1l1ygX5Chg83zc+NwhfRJp+oLvdXq7p8xZ4E2joe1aqT6w
j7CboUr7hhJg/t4OV6vMlwynwsZnv92cxC6uYIwESzCqP4YZ6T8=
=WKIY
-----END PGP SIGNATURE-----
